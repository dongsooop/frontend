name: Apple Connect Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop ]

jobs:
  build-ios:
    timeout-minutes: 30
    name: Apple Connect Deploy
    runs-on: macos-latest
#    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          architecture: x64

      - name: Decode and create .env file
        run: |
          echo "${{ secrets.ENV_B64 }}" | base64 --decode > .env

      - name: Install dependencies
        run: |
          flutter clean
          flutter pub get
          cd ios && pod install --repo-update

      # 코드 분석 수행 (경고는 허용, 에러만 실패 처리)
      - name: Analyze code
        run: flutter analyze --no-fatal-warnings || echo "Analysis completed with warnings"
        continue-on-error: false

      - name: Decode certificates/profiles
        run: |
          echo "${{ secrets.IOS_DISTRIBUTION_P12 }}" | base64 --decode > ios_distribution.p12
          echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision

      - name: Import certificate to keychain
        run: |
          security create-keychain -p "${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}" build.keychain || true
          security import ios_distribution.p12 -k build.keychain -P "${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security unlock-keychain -p "${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
          security set-key-partition-list -S "apple-tool:,apple:,codesign:" -s -k "${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}" build.keychain

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build Flutter iOS
        run: flutter build ipa --release --export-options-plist=ios/ExportOptions_AppStore.plist --verbose

      # TestFlight 업로드
      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v3
        with:
          app-path: ${{ github.workspace }}/build/ios/ipa/dongsoop.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      # 빌드 성공 알림
      - name: Build Success Summary
        run: |
          echo "🎉 Flutter iOS build completed successfully!"
          echo "📱 iOS app built and signed"
          echo "📦 Artifacts uploaded to GitHub Actions"
          echo "⬇️ Download from: Actions tab > Artifacts"
          echo "🔗 Build #${{ github.run_number }}"
          echo "📁 Artifact name: dongsoop-ios-app-${{ github.run_number }}"
          echo "🍎 App name: Dongsoop (dongyang mirae university service)"

      # 빌드 성공 디스코드 알림
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.APPLE_BUILD_DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"🚀 빌드가 성공적으로 완료되었습니다!\"}" \
            $DISCORD_WEBHOOK